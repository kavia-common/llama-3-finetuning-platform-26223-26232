{"is_source_file": true, "format": "Java", "description": "This Java class `JobExecutor` manages the scheduling and execution of machine learning finetuning jobs. It periodically polls a job repository for queued jobs, runs training simulations asynchronously, and updates job status and logs. It also saves results including metrics and artifacts upon successful completion.", "external_files": ["com/example/finetunellama3backend/model/FinetuneJob.java", "com/example/finetunellama3backend/model/FinetuneResult.java", "com/example/finetunellama3backend/repository/FinetuneJobRepository.java", "com/example/finetunellama3backend/repository/FinetuneResultRepository.java", "StorageService.java"], "external_methods": ["org.slf4j.LoggerFactory.getLogger()", "org.slf4j.Logger.error()", "org.springframework.scheduling.annotation.Scheduled", "java.util.concurrent.Executors.newSingleThreadExecutor()", "java.util.List.stream()", "java.util.concurrent.ThreadPoolTaskExecutor.setCorePoolSize()", "java.util.concurrent.ThreadPoolTaskExecutor.setMaxPoolSize()", "java.util.concurrent.ThreadPoolTaskExecutor.setThreadNamePrefix()", "java.util.concurrent.ThreadPoolTaskExecutor.initialize()"], "published": ["com.example.finetunellama3backend.service.JobExecutor"], "classes": [{"name": "JobExecutor", "description": "A Spring component that schedules and executes finetuning jobs asynchronously, handling training simulation, logging, and result storage."}], "methods": [{"name": "JobExecutor", "description": "Constructor that initializes repository dependencies and configures the thread pool executor for asynchronous job execution."}, {"name": "pollQueue", "description": "Scheduled method that periodically polls the job repository for queued jobs and dispatches them for execution."}, {"name": "runJob", "description": "Executes a specific job: updates status, simulates training, catches exceptions, updates final status, and saves results."}, {"name": "simulateTraining", "description": "Simulates a training process by writing logs at each epoch, handling cancellation requests, and saving artifacts and metrics upon completion."}, {"name": "checkCancel", "description": "Checks whether a cancel request has been made for a given job."}], "calls": ["org.slf4j.LoggerFactory.getLogger", "com.example.finetunellama3backend.repository.FinetuneJobRepository.findById", "com.example.finetunellama3backend.repository.FinetuneJobRepository.save", "com.example.finetunellama3backend.repository.FinetuneResultRepository.save", "storageService.writeLog", "storageService.prepareJobDir", "storageService.writeMetrics", "storageService.writeArtifact", "Thread.sleep"], "search-terms": ["JobExecutor", "scheduled polling", "simulateTraining", "training log", "async job execution", "finetune job", "artifact storage", "metrics storage"], "state": 2, "file_id": 23, "knowledge_revision": 48, "git_revision": "", "hash": "28fbe23af09b60f2390d9885fbd2fd4d", "format-version": 4, "code-base-name": "finetune_llama3_backend", "filename": "finetune_llama3_backend/src/main/java/com/example/finetunellama3backend/service/JobExecutor.java", "revision_history": [{"48": ""}]}